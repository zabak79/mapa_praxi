-- MySQL Script generated by MySQL Workbench
-- 01/18/17 09:36:53
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema praxe
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema praxe
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `praxe` DEFAULT CHARACTER SET utf8 COLLATE utf8_czech_ci ;
USE `praxe` ;

-- -----------------------------------------------------
-- Table `praxe`.`ucitele`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praxe`.`ucitele` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `jmeno` VARCHAR(60) NULL DEFAULT NULL,
  `prijmeni` VARCHAR(60) NULL DEFAULT NULL,
  `username` VARCHAR(45) NOT NULL,
  `heslo` VARCHAR(60) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praxe`.`tridy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praxe`.`tridy` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `trida` VARCHAR(10) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praxe`.`firmy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praxe`.`firmy` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nazev_firmy` VARCHAR(60) NULL DEFAULT NULL,
  `ulice` VARCHAR(60) NULL DEFAULT NULL,
  `cp` VARCHAR(10) NULL DEFAULT NULL,
  `mesto` VARCHAR(45) NULL,
  `psc` VARCHAR(10) NULL,
  `kontaktni_osoba` VARCHAR(45) NULL DEFAULT NULL,
  `telefon` VARCHAR(45) NULL DEFAULT NULL,
  `poznamka` TEXT NULL DEFAULT NULL,
  `latitude` FLOAT NULL,
  `longitude` FLOAT NULL,
  `status` VARCHAR(45) NULL COMMENT '\"OK\" indicates that no errors occurred; the address was successfully parsed and at least one geocode was returned.\n\"ZERO_RESULTS\" indicates that the geocode was successful but returned no results. This may occur if the geocoder was passed a non-existent a' /* comment truncated */ /*ddress.
"OVER_QUERY_LIMIT" indicates that you are over your quota.
"REQUEST_DENIED" indicates that your request was denied.
"INVALID_REQUEST" generally indicates that the query (address, components or latlng) is missing.
"UNKNOWN_ERROR" indicates that the request could not be processed due to a server error. The request may succeed if you try again.
*/,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praxe`.`studenti`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praxe`.`studenti` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_trida` INT NOT NULL,
  `id_firmy` INT NULL DEFAULT NULL,
  `id_ucitele_admin` INT NULL COMMENT 'Určuje, který učitel má daného studenta na starosti. Zapíše, v jaké firmě má vykonávat praxi.',
  `jmeno` VARCHAR(60) NULL DEFAULT NULL,
  `prijmeni` VARCHAR(60) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_student_trida_idx` (`id_trida` ASC),
  INDEX `fk_studenti_firma1_idx` (`id_firmy` ASC),
  INDEX `fk_studenti_ucitele1_idx` (`id_ucitele_admin` ASC),
  CONSTRAINT `fk_student_trida`
    FOREIGN KEY (`id_trida`)
    REFERENCES `praxe`.`tridy` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_studenti_firma1`
    FOREIGN KEY (`id_firmy`)
    REFERENCES `praxe`.`firmy` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_studenti_ucitele1`
    FOREIGN KEY (`id_ucitele_admin`)
    REFERENCES `praxe`.`ucitele` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praxe`.`kontrola`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praxe`.`kontrola` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_ucitele` INT NULL DEFAULT NULL,
  `id_studenti` INT NULL DEFAULT NULL,
  `cas_vyberu` DATETIME NULL DEFAULT NULL COMMENT 'Čas, kdy si studenta učitel zamluvil.',
  PRIMARY KEY (`id`),
  INDEX `fk_Kontrola_ucitele1_idx` (`id_ucitele` ASC),
  INDEX `fk_kontrola_studenti1_idx` (`id_studenti` ASC),
  UNIQUE INDEX `id_studenti_UNIQUE` (`id_studenti` ASC),
  CONSTRAINT `fk_Kontrola_ucitele1`
    FOREIGN KEY (`id_ucitele`)
    REFERENCES `praxe`.`ucitele` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_kontrola_studenti1`
    FOREIGN KEY (`id_studenti`)
    REFERENCES `praxe`.`studenti` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
